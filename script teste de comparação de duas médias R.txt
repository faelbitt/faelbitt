## OCN7027 - ANALISE DE DADOS OCEANOGRÁFICOS - 2021
# Profa. Carla Bonetti

#PRATICA: TESTES DE COMPARAÇÃO DE DUAS MÉDIAS - t-STUDENT

#Copiar o endereço da pasta e inverter as barras 
setwd("C:/Users/carla/Dropbox/OCN7108 Analise de Dados 2021_1/R docs")

# Verificar diretório de trabalho
getwd()

# Ler dados CSV (MS DOS) - criando uma tabela de dados - dataframe (df)
df_t <-read.csv2("Pratica_tStudent.csv")  

#UNIDADES DAS VARIÁVEIS: CARBONATO (%); GRANULOMETRIA (PHI); CONSUMO (L)

#Pacotes necessarios para essa prática:
install.packages("ggplot2")    #usado para construir gráficos 
library(ggplot2)   

install.packages("nortest")    #usado para os testes de Normalidade
library(nortest)     

install.packages("dplyr")      #ferramentas de edição - função %>% 
library(dplyr)                #calcula estatisticas por grupos

#Observando dataframe
str(df_t)   

# se necessário ajustar a descrição das variáveis
df_t$FATOR1<-as.factor(df_t$FATOR1)
df_t$CARBONATO<-as.numeric(df_t$CARBONATO)


# Teste de Normalidade de Shapiro-Wilk 

ggplot(df_t,aes(x=CARBONATO))+geom_histogram(aes(y = ..density..),bins=7, fill='darkgray', color='black')+
  stat_function(fun=dnorm, args=list(mean=mean(df_t$CARBONATO), sd=sd(df_t$CARBONATO)))

shapiro.test(df_t$CARBONATO)

# Teste de Normalidade a aplicada a cada grupo de amostras 
with(df_t, shapiro.test(CARBONATO[FATOR1 == "Raso"]))
with(df_t, shapiro.test(CARBONATO[FATOR1 == "Profundo"]))

## AMOSTRAS INDEPENDENTES

#Teste F de igualdade de variâncias
var.test(CARBONATO ~ FATOR1, data = df_t)

# Se Ho for aceita (igualdade das variâncias)  >> teste t-Student
                      #Se Ho for rejeitada (variâncias diferentes)  >> teste t-Welch  >> linha 90

    # Teste t-Student (valor de p para teste bilateral)
t.test(CARBONATO ~ FATOR1, data = df_t, var.equal = TRUE, conf.level=0.95, alternative = "two.sided")

    # Teste t-Student (valor de p para teste unilateral  -  use  "less"  ou  "greater")
t.test(CARBONATO ~ FATOR1, data = df_t, var.equal = TRUE, conf.level=0.95, alternative = "less")


# obter valores de medida central e dispersão por grupo
group_by(df_t, FATOR1) %>%                                #para rodar a função "%>%" carregar o pacote "dplyer"
  summarise(
    count = n(),
    mean = mean(CARBONATO, na.rm = TRUE),
    sd = sd(CARBONATO, na.rm = TRUE),
    median = median(CARBONATO, na.rm = TRUE),
    quantile1 = quantile(CARBONATO, probs = 0.25,na.rm = TRUE),
    quantile3 = quantile(CARBONATO, probs = 0.75,na.rm = TRUE),
    IQR = IQR(CARBONATO, na.rm = TRUE))


# visualizar grafico - diagrama de caixa
gr1 <-ggplot(df_t, aes(x=FATOR1, y=CARBONATO)) +
  geom_boxplot(fill='#A4A4A4', color="black")+
  theme_classic()

gr1

gr1 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)  #acrescenta o valor da média


# REPRODUZIR ETAPAS ACIMA PARA VARIÁVEL "GRANUL" (FATOR2)

#Teste F de igualdade de variâncias
var.test(GRANUL ~ FATOR1, data = df_t)

# Se Ho for rejeitada (variâncias diferentes)  >> teste t-Welch

#Teste Welch para comparação de duas amostras independentes e variancias DIFERENTES 
#(valor de p para teste bilateral - mudar para )
t.test(GRANUL ~ FATOR2, data = df_t, var.equal = FALSE, conf.level=0.95, alternative = "two.sided")

# obter valores de medida central e dispersão por grupo
group_by(df_t, FATOR2) %>%                                #para rodar a função "%>%" carregar o pacote "dplyer"
  summarise(
    count = n(),
    mean = mean(GRANUL, na.rm = TRUE),
    sd = sd(GRANUL, na.rm = TRUE),
    median = median(GRANUL, na.rm = TRUE),
    quantile1 = quantile(GRANUL, probs = 0.25,na.rm = TRUE),
    quantile3 = quantile(GRANUL, probs = 0.75,na.rm = TRUE),
    IQR = IQR(GRANUL, na.rm = TRUE))


# visualizar grafico - diagrama de caixa
gr2 <-ggplot(df_t, aes(x=FATOR2, y=GRANUL)) +
  geom_boxplot(fill='#A4A4A4', color="black")+
  theme_classic()

gr2

gr2 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)  #acrescenta o valor da média


##AMOSTRAS PAREADAS

#Teste t-Student para comparação de duas amostras PAREADAS 
  #(valor de p para teste bilateral - para testes unilateral mudar alternative = "less"  ou  "greater" )

t.test(CONSUMO ~ FATOR3, data = df_t, paired = TRUE, conf.level=0.95, alternative = "two.sided")
t.test(CONSUMO ~ FATOR3, data = df_t, paired = TRUE, conf.level=0.95, alternative = "less")

# visualizar grafico - diagrama de caixa
gr3 <-ggplot(df_t, aes(x=FATOR3, y=CONSUMO)) +
  geom_boxplot(fill='#A4A4A4', color="black")+
  theme_classic()

gr3

gr3 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)  #acrescenta o valor da média



## OPÇÃO EXTRA
#SE A DISTRIBUIÇÃO NÃO FOR NORMAL, USAR O TESTE NÃO PARAMÉTRICO DE WILCOXON (2 amostras)

wilcox.test(CARBONATO ~ FATOR1, data = df)
wilcox.test(GRANUL ~ FATOR2, data = df)

wilcox.test(CARBONATO ~ FATOR1, data = df, 
            exact = FALSE, alternative = "less")    # qdo H0 para p < 0.05; ou "greater" se H0 para p >0.05


# salvar todo o ambiente de trabalho
save.image() #ou
save.image(file = "Pratica_teste_t.RData")


#REFERENCIA: 
# http://www.sthda.com/english/wiki/ggplot2-box-plot-quick-start-guide-r-software-and-data-visualization
# http://www.sthda.com/english/wiki/unpaired-two-samples-t-test-in-r
# http://www.sthda.com/english/wiki/paired-samples-t-test-in-r
# http://www.sthda.com/english/wiki/unpaired-two-samples-wilcoxon-test-in-r